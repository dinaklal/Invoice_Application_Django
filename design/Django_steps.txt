1. Intstall virtualenv
2. Created Venv virtualenv venv_name
3. activate venv - Source venv_name\bin\activate
4. Intstall Django - pip Intstall Django
5. Create project - Django-admin startproject proj_name
6. Create app - python manage.py startapp app_name
7. Alter  Urls.py files in App and project
8. Create view as specified.
9. Add html.
    9.a create templates folder
    9.b Alter settings.py file -'DIRS': [os.path.join(BASE_DIR,'templates')],
    9.c Create html file inside templates
    9.d Alter Views file as - return render(request,'index.html',{'name':'Mughals Invoice'})
10. Static conetnt addition 
    10.a create static folder
    10.b copy static files (css,js & etc)
    10.c Alter settings.py as below
        STATICFILES_DIR = [

            os.path.join(BASE_DIR,'static')
            ]

            STATIC_ROOT = os.path.join(BASE_DIR,'assets')
    10.d execute command to create assets foder -  python3.7 manage.py collectstatic

11. DB error - mysqlclient 1.3.13 or newer is required; you have 0.9.3

            This is how I fixed it.

            Go to your django/db/backends/mysql installation dir. Check your path in the error message.

            I'm using pipenv so my path is:

            /home/username/.local/share/virtualenvs/project-env/lib/python3.7/site-packages/django/db/backends/mysql

            Open file base.py and search for:

            version = Database.version_info
            Put a pass inside if and comment line:

            raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.version)

            Like this.

            if version < (1, 3, 13):
            pass
            '''
            raise ImproperlyConfigured(
                'mysqlclient 1.3.13 or newer is required; you have %s.'
                % Database.__version__
            )
            '''
            Save, close this file and open operations.py.

            Search for:

            query = query.decode(errors='replace')
            and change decode to encode

            query = query.encode(errors='replace')
            Now, try to run the server.
12. DB Check -- python manage.py check
13. DB Create --  python manage.py makemigrations
14. DB create -- python manage.py migrate
15. Create model , in models.py - Inherit models.Model
    DB Create --  python manage.py makemigrations
    Then ---python manage.py sqlmigrate login 0001_initial
    Migrate ---- python manage.py migrate

